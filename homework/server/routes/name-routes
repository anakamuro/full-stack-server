// require Express
const express = require('express')
const { handle404 } = require('../lib/custom-errors')
//const {requireToken} = require('../config/auth')

// require the Model we just created
const Name = require('../models/name')

// Creating a router for us to make paths on
const router = express.Router()

// INDEX
// GET /campaigns
router.get('/names',  (req, res, next) => {
	Name.find()
		.then((names) => {
			return names.map((name) => name)
		})
		.then((names) => res.status(200).json({ names: names }))
		.catch(next)
})

// SHOW
// GET /campaigns/5a7db6c74d55bc51bdf39793
router.get('/names/:id', (req, res, next) => {
	// req.params.id will be set based on the `:id` in the route
	Name.findById(req.params.id)
		.then(handle404)
		.then((name) => res.status(200).json({ name: name }))
		.catch(next)
})

// CREATE
// POST /campaigns
router.post('/names', (req, res, next) => {
	Name.create(req.body.name)
		.then((campaign) => {
			res.status(201).json({ name: name})
		})
		.catch(next)
})

// UPDATE
// PATCH /campaigns/5a7db6c74d55bc51bdf39793
router.patch('/names/:id', (req, res, next) => {
	Name.findById(req.params.id)
		.then(handle404)
		.then((name) => {
			return name.updateOne(req.body.name)
		})
		.then(() => res.sendStatus(204))
		.catch(next)
})

// DESTROY
// DELETE /campaigns/5a7db6c74d55bc51bdf39793
router.delete('/names/:id', (req, res, next) => {
	Name.findById(req.params.id)
		.then(handle404)
		.then((name) => {
			name.deleteOne()
		})
		.then(() => res.sendStatus(204))
		.catch(next)
})

// exporting the router to use elsewhere
module.exports = router
